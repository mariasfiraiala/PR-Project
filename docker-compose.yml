version: '3.8'

services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - 55001:55000
    volumes:
      - ./api/certificates:/etc/ca-certificates/
    network_mode: "host"
    depends_on:
      - mqtt
  mqtt:
    build:
      context: ./mqtt
      dockerfile: Dockerfile
    environment:
      - MQTT_BROKER=localhost
      - MQTT_PORT=8883
      - MQTT_TOPIC=sensor/data
      - FASTAPI_URL=http://localhost:55000/data/
    volumes:
      - ./mqtt/certificates:/etc/ca-certificates/
    network_mode: "host"
    depends_on:
      mosquitto:
        condition: service_started
      db:
        condition: service_healthy

  mosquitto:
    image: eclipse-mosquitto:latest
    ports:
      - "8883:8883"
      - "8884:8884"
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./mosquitto/certificates:/etc/ca-certificates/
    network_mode: "host"

  db:
    image: postgres:15-alpine
    expose:
      - 5432
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=user
      - POSTGRES_DB=sensors
    volumes:
      - postgres-data:/var/lib/postgresql/data
    network_mode: "host"
    healthcheck:      
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB} -t 1"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 10s
  
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana:/etc/grafana/provisioning
    network_mode: "host"
    depends_on:
      db:
        condition: service_healthy

volumes:
  postgres-data:
  grafana-data:
